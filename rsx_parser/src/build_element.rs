use std::fmt::Arguments;

use dioxus::{
    core::{Attribute, Listener, NodeFactory},
    prelude::{dioxus_elements::*, VNode},
};

pub fn build_element<'a>(
    factory: &NodeFactory<'a>,
    tag: &'a str,
    listeners: &'a [Listener<'a>],
    attributes: &'a [Attribute<'a>],
    children: &'a [VNode<'a>],
    key: Option<Arguments<'_>>,
) -> VNode<'a> {
    match tag {
        "h6" => factory.element(h6, listeners, attributes, children, key),
        "col" => factory.element(col, listeners, attributes, children, key),
        "feFuncA" => factory.element(feFuncA, listeners, attributes, children, key),
        "feBlend" => factory.element(feBlend, listeners, attributes, children, key),
        "td" => factory.element(td, listeners, attributes, children, key),
        "track" => factory.element(track, listeners, attributes, children, key),
        "feFlood" => factory.element(feFlood, listeners, attributes, children, key),
        "tbody" => factory.element(tbody, listeners, attributes, children, key),
        "param" => factory.element(param, listeners, attributes, children, key),
        "fePointLight" => factory.element(fePointLight, listeners, attributes, children, key),
        "h1" => factory.element(h1, listeners, attributes, children, key),
        "abbr" => factory.element(abbr, listeners, attributes, children, key),
        "polyline" => factory.element(polyline, listeners, attributes, children, key),
        "path" => factory.element(path, listeners, attributes, children, key),
        "b" => factory.element(b, listeners, attributes, children, key),
        "meta" => factory.element(meta, listeners, attributes, children, key),
        "base" => factory.element(base, listeners, attributes, children, key),
        "aside" => factory.element(aside, listeners, attributes, children, key),
        "polygon" => factory.element(polygon, listeners, attributes, children, key),
        "foreignObject" => factory.element(foreignObject, listeners, attributes, children, key),
        "del" => factory.element(del, listeners, attributes, children, key),
        "object" => factory.element(object, listeners, attributes, children, key),
        "feDiffuseLighting" => {
            factory.element(feDiffuseLighting, listeners, attributes, children, key)
        }
        "colgroup" => factory.element(colgroup, listeners, attributes, children, key),
        "time" => factory.element(time, listeners, attributes, children, key),
        "marker" => factory.element(marker, listeners, attributes, children, key),
        "ruby" => factory.element(ruby, listeners, attributes, children, key),
        "feComposite" => factory.element(feComposite, listeners, attributes, children, key),
        "view" => factory.element(view, listeners, attributes, children, key),
        "small" => factory.element(small, listeners, attributes, children, key),
        "thead" => factory.element(thead, listeners, attributes, children, key),
        "div" => factory.element(div, listeners, attributes, children, key),
        "samp" => factory.element(samp, listeners, attributes, children, key),
        "span" => factory.element(span, listeners, attributes, children, key),
        "q" => factory.element(q, listeners, attributes, children, key),
        "summary" => factory.element(summary, listeners, attributes, children, key),
        "text" => factory.element(text, listeners, attributes, children, key),
        "feSpecularLighting" => {
            factory.element(feSpecularLighting, listeners, attributes, children, key)
        }
        "kbd" => factory.element(kbd, listeners, attributes, children, key),
        "select" => factory.element(select, listeners, attributes, children, key),
        "caption" => factory.element(caption, listeners, attributes, children, key),
        "input" => factory.element(input, listeners, attributes, children, key),
        "wbr" => factory.element(wbr, listeners, attributes, children, key),
        "legend" => factory.element(legend, listeners, attributes, children, key),
        "ul" => factory.element(ul, listeners, attributes, children, key),
        "li" => factory.element(li, listeners, attributes, children, key),
        "feConvolveMatrix" => {
            factory.element(feConvolveMatrix, listeners, attributes, children, key)
        }
        "circle" => factory.element(circle, listeners, attributes, children, key),
        "s" => factory.element(s, listeners, attributes, children, key),
        "clipPath" => factory.element(clipPath, listeners, attributes, children, key),
        "feMergeNode" => factory.element(feMergeNode, listeners, attributes, children, key),
        "discard" => factory.element(discard, listeners, attributes, children, key),
        "switch" => factory.element(switch, listeners, attributes, children, key),
        "var" => factory.element(var, listeners, attributes, children, key),
        "feComponentTransfer" => {
            factory.element(feComponentTransfer, listeners, attributes, children, key)
        }
        "embed" => factory.element(embed, listeners, attributes, children, key),
        "bdi" => factory.element(bdi, listeners, attributes, children, key),
        "sup" => factory.element(sup, listeners, attributes, children, key),
        "noscript" => factory.element(noscript, listeners, attributes, children, key),
        "feDisplacementMap" => {
            factory.element(feDisplacementMap, listeners, attributes, children, key)
        }
        "feTurbulence" => factory.element(feTurbulence, listeners, attributes, children, key),
        "figcaption" => factory.element(figcaption, listeners, attributes, children, key),
        "pre" => factory.element(pre, listeners, attributes, children, key),
        "radialGradient" => factory.element(radialGradient, listeners, attributes, children, key),
        "datalist" => factory.element(datalist, listeners, attributes, children, key),
        "mark" => factory.element(mark, listeners, attributes, children, key),
        "linearGradient" => factory.element(linearGradient, listeners, attributes, children, key),
        "feFuncB" => factory.element(feFuncB, listeners, attributes, children, key),
        "stop" => factory.element(stop, listeners, attributes, children, key),
        "animateTransform" => {
            factory.element(animateTransform, listeners, attributes, children, key)
        }
        "set" => factory.element(set, listeners, attributes, children, key),
        "strong" => factory.element(strong, listeners, attributes, children, key),
        "dd" => factory.element(dd, listeners, attributes, children, key),
        "g" => factory.element(g, listeners, attributes, children, key),
        "article" => factory.element(article, listeners, attributes, children, key),
        "defs" => factory.element(defs, listeners, attributes, children, key),
        "ellipse" => factory.element(ellipse, listeners, attributes, children, key),
        "main" => factory.element(main, listeners, attributes, children, key),
        "br" => factory.element(br, listeners, attributes, children, key),
        "canvas" => factory.element(canvas, listeners, attributes, children, key),
        "output" => factory.element(output, listeners, attributes, children, key),
        "tspan" => factory.element(tspan, listeners, attributes, children, key),
        "feGaussianBlur" => factory.element(feGaussianBlur, listeners, attributes, children, key),
        "dl" => factory.element(dl, listeners, attributes, children, key),
        "ol" => factory.element(ol, listeners, attributes, children, key),
        "animateMotion" => factory.element(animateMotion, listeners, attributes, children, key),
        "filter" => factory.element(filter, listeners, attributes, children, key),
        "figure" => factory.element(figure, listeners, attributes, children, key),
        "table" => factory.element(table, listeners, attributes, children, key),
        "a" => factory.element(a, listeners, attributes, children, key),
        "mask" => factory.element(mask, listeners, attributes, children, key),
        "feMerge" => factory.element(feMerge, listeners, attributes, children, key),
        "fieldset" => factory.element(fieldset, listeners, attributes, children, key),
        "em" => factory.element(em, listeners, attributes, children, key),
        "nav" => factory.element(nav, listeners, attributes, children, key),
        "footer" => factory.element(footer, listeners, attributes, children, key),
        "button" => factory.element(button, listeners, attributes, children, key),
        "feImage" => factory.element(feImage, listeners, attributes, children, key),
        "tfoot" => factory.element(tfoot, listeners, attributes, children, key),
        "picture" => factory.element(picture, listeners, attributes, children, key),
        "img" => factory.element(img, listeners, attributes, children, key),
        "symbol" => factory.element(symbol, listeners, attributes, children, key),
        "form" => factory.element(form, listeners, attributes, children, key),
        "body" => factory.element(body, listeners, attributes, children, key),
        "feTile" => factory.element(feTile, listeners, attributes, children, key),
        "rp" => factory.element(rp, listeners, attributes, children, key),
        "address" => factory.element(address, listeners, attributes, children, key),
        "header" => factory.element(header, listeners, attributes, children, key),
        "svg" => factory.element(svg, listeners, attributes, children, key),
        "audio" => factory.element(audio, listeners, attributes, children, key),
        "script" => factory.element(script, listeners, attributes, children, key),
        "line" => factory.element(line, listeners, attributes, children, key),
        "hatch" => factory.element(hatch, listeners, attributes, children, key),
        "head" => factory.element(head, listeners, attributes, children, key),
        "rect" => factory.element(rect, listeners, attributes, children, key),
        "area" => factory.element(area, listeners, attributes, children, key),
        "feOffset" => factory.element(feOffset, listeners, attributes, children, key),
        "metadata" => factory.element(metadata, listeners, attributes, children, key),
        "i" => factory.element(i, listeners, attributes, children, key),
        "pattern" => factory.element(pattern, listeners, attributes, children, key),
        "dt" => factory.element(dt, listeners, attributes, children, key),
        "h5" => factory.element(h5, listeners, attributes, children, key),
        "progress" => factory.element(progress, listeners, attributes, children, key),
        "source" => factory.element(source, listeners, attributes, children, key),
        "optgroup" => factory.element(optgroup, listeners, attributes, children, key),
        "h3" => factory.element(h3, listeners, attributes, children, key),
        "feMorphology" => factory.element(feMorphology, listeners, attributes, children, key),
        "feFuncR" => factory.element(feFuncR, listeners, attributes, children, key),
        "th" => factory.element(th, listeners, attributes, children, key),
        "feDropShadow" => factory.element(feDropShadow, listeners, attributes, children, key),
        "option" => factory.element(option, listeners, attributes, children, key),
        "map" => factory.element(map, listeners, attributes, children, key),
        "cite" => factory.element(cite, listeners, attributes, children, key),
        "desc" => factory.element(desc, listeners, attributes, children, key),
        "title" => factory.element(title, listeners, attributes, children, key),
        "code" => factory.element(code, listeners, attributes, children, key),
        "ins" => factory.element(ins, listeners, attributes, children, key),
        "tr" => factory.element(tr, listeners, attributes, children, key),
        "mpath" => factory.element(mpath, listeners, attributes, children, key),
        "blockquote" => factory.element(blockquote, listeners, attributes, children, key),
        "feColorMatrix" => factory.element(feColorMatrix, listeners, attributes, children, key),
        "label" => factory.element(label, listeners, attributes, children, key),
        "dfn" => factory.element(dfn, listeners, attributes, children, key),
        "hr" => factory.element(hr, listeners, attributes, children, key),
        "video" => factory.element(video, listeners, attributes, children, key),
        "feDistantLight" => factory.element(feDistantLight, listeners, attributes, children, key),
        "h4" => factory.element(h4, listeners, attributes, children, key),
        "bdo" => factory.element(bdo, listeners, attributes, children, key),
        "sub" => factory.element(sub, listeners, attributes, children, key),
        "p" => factory.element(p, listeners, attributes, children, key),
        "feFuncG" => factory.element(feFuncG, listeners, attributes, children, key),
        "iframe" => factory.element(iframe, listeners, attributes, children, key),
        "h2" => factory.element(h2, listeners, attributes, children, key),
        "meter" => factory.element(meter, listeners, attributes, children, key),
        "data" => factory.element(data, listeners, attributes, children, key),
        "animate" => factory.element(animate, listeners, attributes, children, key),
        "rt" => factory.element(rt, listeners, attributes, children, key),
        "section" => factory.element(section, listeners, attributes, children, key),
        "menu" => factory.element(menu, listeners, attributes, children, key),
        "link" => factory.element(link, listeners, attributes, children, key),
        "textPath" => factory.element(textPath, listeners, attributes, children, key),
        "u" => factory.element(u, listeners, attributes, children, key),
        "slot" => factory.element(slot, listeners, attributes, children, key),
        "feSpotLight" => factory.element(feSpotLight, listeners, attributes, children, key),
        "textarea" => factory.element(textarea, listeners, attributes, children, key),
        "details" => factory.element(details, listeners, attributes, children, key),
        "style" => factory.element(style, listeners, attributes, children, key),
        "template" => factory.element(template, listeners, attributes, children, key),
        "hatchpath" => factory.element(hatchpath, listeners, attributes, children, key),
        _ => panic!("Unknown tag: {}", tag),
    }
}
